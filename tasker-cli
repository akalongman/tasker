#!/usr/bin/env bash
set -e

function _realpath {
  local success=true
  local path="$1"

  # make sure the string isn't empty as that implies something in further logic
  if [ -z "$path" ]; then
    success=false
  else
    # start with the file name (sans the trailing slash)
    path="${path%/}"

    # if we stripped off the trailing slash and were left with nothing, that means we're in the root directory
    if [ -z "$path" ]; then
      path="/"
    fi

    # get the basename of the file (ignoring '.' & '..', because they're really part of the path)
    local file_basename="${path##*/}"
    if [[ ( "$file_basename" = "." ) || ( "$file_basename" = ".." ) ]]; then
      file_basename=""
    fi

    # extracts the directory component of the full path, if it's empty then assume '.' (the current working directory)
    local directory="${path%$file_basename}"
    if [ -z "$directory" ]; then
      directory='.'
    fi

    # attempt to change to the directory
    if ! cd "$directory" &>/dev/null ; then
      success=false
    fi

    if $success; then
      # does the filename exist?
      if [[ ( -n "$file_basename" ) && ( ! -e "$file_basename" ) ]]; then
        success=false
      fi

      # get the absolute path of the current directory & change back to previous directory
      local abs_path="$(pwd -P)"
      cd "-" &>/dev/null

      # Append base filename to absolute path
      if [ "${abs_path}" = "/" ]; then
        abs_path="${abs_path}${file_basename}"
      else
        abs_path="${abs_path}/${file_basename}"
      fi

      # output the absolute path
      echo "$abs_path"
    fi
  fi

  $success
}

source $(dirname $(_realpath $0))/tasker-core

function init { # add tasker in current project
  local installMethod=$(_install-method)
  local packageManager=$(_package-manager $installMethod)

  _install-tasker $installMethod
  _create-tasker $packageManager
}

function _install-method {
  whiptail \
    --title "how to install?" \
    --menu "" 11 60 4 \
    1 "yarn add @thecotne/tasker" \
    2 "yarn add @thecotne/tasker --dev" \
    3 "npm install @thecotne/tasker --save" \
    4 "npm install @thecotne/tasker --save-dev" \
    2>&1 >/dev/tty
}

function _package-manager {
  if [[ $1 -eq 1 || $1 -eq 2 ]]; then
    echo "yarn"
  elif [[ $1 -eq 3 || $1 -eq 4 ]]; then
    echo "npm"
  else
    exit 0
  fi
}

function _install-tasker {
  case $1 in
    1)
      yarn add @thecotne/tasker
      ;;
    2)
      yarn add @thecotne/tasker --dev
      ;;
    3)
      npm install @thecotne/tasker --save
      ;;
    4)
      npm install @thecotne/tasker --save-dev
      ;;
  esac
}

function _create-tasker {
  cp "./node_modules/@thecotne/tasker/takser-$1" tasker
}

_bootstrap "${@}"
